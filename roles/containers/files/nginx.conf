events {}

http {
  server {
      server_name {{ dns_name }};
      location / {
          proxy_pass http://127.0.0.1:{{ homer_http }};
      }
  }

  # apps

  server {
      server_name jellyfin.{{ dns_name }};
      location / {
          proxy_pass http://127.0.0.1:{{ jellyfin_http }};
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Forwarded-Protocol $scheme;
          proxy_set_header X-Forwarded-Host $http_host;

          # Disable buffering when the nginx proxy gets very resource heavy upon streaming
          proxy_buffering off;
      }


      # location block for /web - This is purely for aesthetics so /web/#!/ works instead of having to go to /web/index.html/#!/
      location = /web/ {
        # Proxy main Jellyfin traffic
          proxy_pass http://127.0.0.1:{{ jellyfin_http }}/web/index.html;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Forwarded-Protocol $scheme;
          proxy_set_header X-Forwarded-Host $http_host;
      }

      location /socket {
        # Proxy Jellyfin Websockets traffic
        proxy_pass http://127.0.0.1:{{ jellyfin_http }};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
    }

  }
  server {
      server_name radarr.{{ dns_name }};
      location / {
          proxy_pass http://127.0.0.1:{{ radarr_http }};
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $http_connection;
      }
  }
  server {
      server_name prowlarr.{{ dns_name }};
      location / {
          proxy_pass http://127.0.0.1:{{ prowlarr_http }};
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection $http_connection;
      }
  }
  server {
      server_name qbit.{{ dns_name }};
      location / {
          proxy_pass http://127.0.0.1:{{ qbittorrent_http }};
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-Proto $scheme;
      }
  }
  server {
      server_name speedtest.{{ dns_name }};
      location / {
          proxy_pass http://127.0.0.1:{{ speedtest_http }};
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-Proto $scheme;
      }
  }
  server {
      server_name syncthing.{{ dns_name }};
      location / {
          proxy_pass http://127.0.0.1:{{ syncthing_http }};
      }
  }
  server {
      server_name cors.{{ dns_name }};
      location / {
          proxy_pass http://127.0.0.1:{{ cors_http }};
      }
  }

  # network

  server {
      server_name pihole.{{ dns_name }};
      location / {
          proxy_pass http://127.0.0.1:{{ pihole_http }};
      }
  }
  server {
      server_name unifi.{{ dns_name }};
      location / {
          proxy_pass http://127.0.0.1:{{ unifi_http }};
      }
  }

  # analytics

  server {

      server_name grafana.{{ dns_name }};
      location / {
          proxy_pass http://127.0.0.1:{{ grafana_http }};
          proxy_set_header Host $http_host;
      }
      # Proxy Grafana Live WebSocket connections.
      location /api/live/ {
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_set_header Host $http_host;
          proxy_pass http://127.0.0.1:{{ grafana_http }};
      }
  }
}
