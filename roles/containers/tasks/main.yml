---
- name: Traefik proxy
  tags:
    - containers
    - traefik
    - proxy
  block:
    - name: Create traefik folder
      become: true
      file:
        path: "{{ docker_dir }}/traefik"
        state: directory
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: 0755

    - name: Create acme.json
      file:
        path: "{{ docker_dir }}/traefik/acme.json"
        state: touch
        modification_time: preserve
        access_time: preserve
        mode: 0600

    - name: Template config file
      template:
        src: "files/traefik/traefik.yml"
        dest: "{{ docker_dir }}/traefik/traefik.yml"
        owner: "{{ username }}"
        group: "{{ username }}"

    - name: Template compose file
      template:
        src: "files/traefik/docker-compose.yml"
        dest: "{{ docker_dir }}/traefik/docker-compose.yml"
        owner: "{{ username }}"
        group: "{{ username }}"

    - name: Run traefik compose
      community.docker.docker_compose_v2:
        project_src: "{{ docker_dir }}/traefik"

- name: Watchtower
  tags:
    - containers
    - watchtower
  docker_container:
    name: watchtower
    image: containrrr/watchtower
    pull: true
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart_policy: unless-stopped

- name: CORS container
  tags:
    - containers
    - cors
  docker_container:
    name: cors
    pull: true
    image: imjacobclark/cors-container
    restart_policy: unless-stopped
    networks:
      - name: proxy
    labels:
      traefik.enable: "true"
      traefik.http.routers.cors.rule: "Host(`cors.{{ dns_name }}`)"
      traefik.http.routers.cors.entrypoints: "https"
      # traefik.http.services.cors.loadbalancer.server.port: "3000"
      traefik.http.routers.cors.tls.certresolver: "godaddy"

- name: Homer
  tags:
    - containers
    - homer
  block:
    - name: Create and chmod folders
      become: true
      file:
        path: "{{ item }}"
        owner: "{{ username }}"
        group: "{{ username }}"
        state: directory
        mode: 0755
      with_items:
        - "{{ docker_dir }}/homer"

    - name: Homer icons
      copy:
        src: "files/homer/icons"
        dest: "{{ docker_dir }}/homer/"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: 0755
      notify: restart homer

    - name: Homer config
      template:
        src: "files/homer/config.yml"
        dest: "{{ docker_dir }}/homer/"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: 0755

    - name: Make sure the Homer container is created and running
      docker_container:
        name: homer
        image: "b4bz/homer"
        pull: true
        state: started
        restart_policy: unless-stopped
        user: "{{ uid }}"
        volumes:
          - "{{ docker_dir }}/homer:/www/assets"
        networks:
          - name: proxy
        labels:
          traefik.enable: "true"
          traefik.http.routers.homer.rule: "Host(`{{ dns_name }}`)"
          traefik.http.routers.homer.entrypoints: "https"
          traefik.http.routers.homer.tls.certresolver: "godaddy"

- name: Syncthing
  tags:
    - containers
    - syncthing
  docker_container:
    name: syncthing
    image: "syncthing/syncthing"
    pull: true
    state: started
    restart_policy: unless-stopped
    env:
      "PUID": "1000"
      "PGID": "1000"
    networks:
      - name: host
    volumes:
      - "{{ docker_dir }}/syncthing:/var/syncthing"
      - "/bigboi/storage/sync:/sync"
      - "/bigboi/media/:/media"
    labels:
      traefik.enable: "true"
      traefik.http.routers.syncthing.rule: "Host(`syncthing.{{ dns_name }}`)"
      traefik.http.services.syncthing.loadbalancer.server.port: "8384"
      traefik.http.routers.syncthing.entrypoints: "https"
      traefik.http.routers.syncthing.tls.certresolver: "godaddy"

- name: Run IT Tools
  tags:
    - containers
    - it-tools
  docker_container:
    name: it-tools
    image: corentinth/it-tools
    state: started
    pull: true
    restart_policy: unless-stopped
    networks:
      - name: proxy
    labels:
      traefik.enable: "true"
      traefik.http.routers.it-tools.rule: "Host(`it-tools.{{ dns_name }}`)"
      traefik.http.routers.it-tools.entrypoints: "https"
      traefik.http.routers.it-tools.tls.certresolver: "godaddy"

- import_tasks: analytics.yml
- import_tasks: media.yml
- import_tasks: network.yml
